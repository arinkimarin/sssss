let schedule = {};
let currentFloor = '';

const weekdayNames = ['일', '월', '화', '수', '목', '금'];

// 월~금 모두 CSV 문자열로 데이터 저장
const csvData = {
  '월': `
시간,강의실
9:00,201
9:00,202
9:00,407
9:30,201
9:30,202
9:30,407
10:00,201
10:00,202
10:00,407
10:30,201
10:00,202
10:00,305
10:00,407
11:00,201
11:00,202
11:00,305
11:00,407
11:30,201
11:30,202
11:30,305
11:30,407
12:00,406
12:00,407
12:30,406
12:30,407
13:00,406
13:00,407
13:30,201
13:00,202
13:00,305
13:00,309
13:00,406
13:00,505
14:00,201
14:00,202
14:00,305
14:00,309
14:00,406
14:00,505
14:30,201
14:30,202
14:30,305
14:30,309
14:30,406
14:30,505
15:00,201
15:00,202
15:00,305
15:00,309
15:00,407
15:00,505
15:30,201
15:30,305
15:30,309
15:30,407
15:30,505
16:00,201
16:00,305
16:00,309
16:00,407
16:00,505
16:30,201
16:30,309
16:30,505
17:00,201
17:00,505
17:30,201
17:30,505
18:00,201
18:00,202
18:00,305
18:00,309
18:30,201
18:30,202
18:30,305
18:30,309
18:30,407
18:30,505
19:00,201
19:00,202
19:00,305
19:00,309
19:30,202
19:30,406
20:00,406
20:30,
21:00,
21:30,
22:00,

`,
  '화': `
시간,강의실
9:00,201
9:30,201
10:00,201
10:00,202
10:00,305
10:00,309
10:00,407
10:00,505
10:30,201
10:30,202
10:30,305
10:30,309
10:30,407
10:30,505
11:00,201
11:00,202
11:00,305
11:00,309
11:00,505
11:30,201
11:30,202
11:30,305
11:30,309
11:30,505
12:00,201
12:00,407
12:30,201
12:30,407
13:00,201
13:00,202
13:00,305
13:00,309
13:00,407
13:30,201
13:30,202
13:30,305
13:30,309
13:30,407
14:00,201
14:00,202
14:00,305
14:00,309
14:00,406
14:00,407
14:30,201
14:30,202
14:30,305
14:30,309
14:30,406
14:30,407
15:00,201
15:00,202
15:00,305
15:00,309
15:30,201
15:30,202
15:30,305
15:30,309
16:00,201
16:00,202
16:00,305
16:00,309
16:00,404
16:00,407
16:30,201
16:30,202
16:30,305
16:30,309
16:30,404
16:30,407
17:00,202
17:00,201
17:30,201
17:30,202
18:00,201
18:00,202
18:00,305
18:00,309
18:00,407
18:30,201
18:30,202
18:30,305
18:30,309
18:30,407
19:00,201
19:00,202
19:00,305
19:00,309
19:00,404
19:30,201
19:30,202
19:30,305
19:30,309
19:30,404
20:00,201
20:00,202
20:00,305
20:30,201
20:30,202
20:30,305
21:00,201
21:00,305
21:30,201
21:30,305
22:00,201
22:30,201

`,
  '수': `
시간,강의실
9:00,202
9:30,202
10:00,202
10:30,202
10:30,407
10:30,505
11:00,202
11:00,407
11:00,505
11:30,202
11:30,407
11:30,505
12:00,201
12:00,407
12:30,201
12:30,407
13:00,201
13:00,407
13:30,201
13:30,305
13:30,505
14:00,201
14:00,305
14:00,505
14:30,201
14:30,305
14:30,505
15:00,202
15:00,305
15:00,407
15:00,408
15:00,505
15:30,202
15:30,305
15:30,407
15:30,408
15:30,505
16:00,202
16:00,305
16:00,407
16:00,408
16:00,505
16:30,202
17:00,202
17:30,202
18:00,202
18:00,305
18:00,407
18:00,505
18:30,202
18:30,305
18:30,407
18:30,505
19:00,202
19:00,305
19:00,407
19:00,505
19:30,407
19:30,408
19:30,505
20:00,407
20:00,408
20:00,505
20:30,407
20:30,408
20:30,505
21:00,
21:30,
22:00,

`,
  '목': `
시간,강의실
9:00,
9:30,
10:00,
10:30,201
10:30,305
10:30,505
11:00,201
11:00,305
11:00,505
11:30,201
11:30,305
11:30,505
12:00,201
12:30,202
13:00,202
13:30,201
13:30,202
13:30,305
13:30,407
13:30,505
14:00,201
14:00,202
14:00,305
14:00,407
14:00,505
14:30,201
14:30,202
14:30,305
14:30,407
14:30,505
15:00,201
15:00,202
15:00,305
15:00,309
15:00,407
15:00,505
15:30,201
15:30,202
15:30,305
15:30,309
15:30,407
15:30,505
16:00,201
16:00,202
16:00,305
16:00,309
16:00,407
16:00,505
16:30,201
16:30,309
16:30,407
17:00,201
17:00,309
17:00,407
17:30,201
17:30,309
17:30,407
18:00,201
18:00,202
18:00,305
18:00,407
18:00,505
18:30,201
18:30,202
18:30,305
18:30,407
18:30,505
19:00,201
19:00,202
19:00,305
19:00,407
19:00,505
19:30,407
19:30,505
20:00,407
20:00,505
20:30,407
20:30,505
21:00,
21:30,
22:00,

`,
  '금': `
시간,강의실
9:00,202
9:30,202
10:00,202
10:00,305
10:00,407
10:30,202
10:30,305
10:30,407
11:00,202
11:00,305
11:00,407
11:30,202
11:30,305
11:30,407
12:00,407
12:30,407
13:00,309
13:00,502
13:30,309
13:30,502
14:00,305
14:00,309
14:00,502
14:30,305
14:30,309
14:30,502
15:00,305
15:00,309
15:00,407
15:30,305
15:30,309
15:30,407
16:00,309
16:00,407
16:30,309
16:30,407
17:00,
17:30,
18:00,309
18:00,407
18:30,309
18:30,407
19:00,309
19:00,407
19:30,309
19:30,407
20:00,
20:30,
21:00,
21:30,
22:00,
22:30,
`,
};

function getCurrentTimeSlotFromDate(date) {
  const hour = date.getHours().toString().padStart(2, '0');
  const minute = date.getMinutes() < 30 ? '00' : '30';
  return `${hour}:${minute}`;
}

function updateCurrentTime() {
  const now = new Date();

  const h = now.getHours().toString().padStart(2, '0');
  const m = now.getMinutes().toString().padStart(2, '0');
  const day = weekdayNames[now.getDay()];
  const time = getCurrentTimeSlotFromDate(now);

  document.getElementById('current-time').innerText = `현재시간 : ${h}:${m} (${day}요일)`;

  loadSchedule(day).then(() => {
    showFloor(currentFloor, day, time);
  });
}

function loadSchedule(day) {
  if (!schedule[day]) schedule[day] = {};
  return new Promise((resolve) => {
    const csv = csvData[day];
    if (!csv) {
      resolve();
      return;
    }
    const lines = csv.trim().split('\n').slice(1); // 헤더 제외
    lines.forEach(line => {
      const [timeRaw, roomRaw] = line.split(',');
      const [hour, minute] = timeRaw.split(':');
      const time = `${hour.padStart(2, '0')}:${minute}`;
      const room = roomRaw.trim();

      if (!schedule[day][time]) schedule[day][time] = [];
      schedule[day][time].push(room);
    });
    resolve();
  });
}

function showFloor(floor, day, time) {
  currentFloor = floor;
  const rooms = floorMap[floor] || [];
  const occupied = (schedule[day] && schedule[day][time]) ? schedule[day][time] : [];

  const container = document.getElementById('room-container');
  container.innerHTML = '';
  rooms.forEach(room => {
    const div = document.createElement('div');
    div.className = 'room-box ' + (occupied.includes(room) ? 'occupied' : 'available');
    div.innerText = room;
    container.appendChild(div);
  });

  document.getElementById('floorDisplay').innerText = `${floor} 강의실`;
}

function handleFloorClick(floor) {
  const now = new Date();
  now.setHours(15); // 테스트용 시간 고정
  now.setMinutes(0);
  const day = weekdayNames[now.getDay()];
  const time = getCurrentTimeSlotFromDate(now);

  currentFloor = floor;

  if (schedule[day]) {
    showFloor(floor, day, time);
  } else {
    loadSchedule(day).then(() => {
      showFloor(floor, day, time);
    });
  }
}

const floorMap = {
  '2F': ['201', '202'],
  '3F': ['305', '309'],
  '4F': ['404', '406', '407', '408'],
  '5F': ['502', '505'],
};

// 최초 실행 및 1분마다 갱신
updateCurrentTime();
setInterval(updateCurrentTime, 60000);
